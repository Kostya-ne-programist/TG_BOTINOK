import telebot
from telebot.types import BotCommand, Message, ChatPermissions
from datetime import datetime, timedelta, UTC
import re

API_TOKEN = 'YOUR_BOT_TOKEN_HERE'  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(API_TOKEN)

blacklist = set()  # –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# ========== –ö–æ–º–∞–Ω–¥—ã ==========
mute_commands = [
    ("mut_30s", "–ú—É—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥"),
    ("mut_1m", "–ú—É—Ç –Ω–∞ 1 –º–∏–Ω—É—Ç—É"),
    ("mut_2m", "–ú—É—Ç –Ω–∞ 2 –º–∏–Ω—É—Ç—ã"),
    ("mut_5m", "–ú—É—Ç –Ω–∞ 5 –º–∏–Ω—É—Ç"),
    ("mut_10m", "–ú—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç"),
    ("mut_15m", "–ú—É—Ç –Ω–∞ 15 –º–∏–Ω—É—Ç"),
    ("mut_30m", "–ú—É—Ç –Ω–∞ 30 –º–∏–Ω—É—Ç"),
    ("mut_45m", "–ú—É—Ç –Ω–∞ 45 –º–∏–Ω—É—Ç"),
    ("mut_1h", "–ú—É—Ç –Ω–∞ 1 —á–∞—Å"),
    ("mut_2h", "–ú—É—Ç –Ω–∞ 2 —á–∞—Å–∞"),
    ("mut_3h", "–ú—É—Ç –Ω–∞ 3 —á–∞—Å–∞"),
    ("mut_6h", "–ú—É—Ç –Ω–∞ 6 —á–∞—Å–æ–≤"),
    ("mut_12h", "–ú—É—Ç –Ω–∞ 12 —á–∞—Å–æ–≤"),
    ("mut_1d", "–ú—É—Ç –Ω–∞ 1 –¥–µ–Ω—å"),
    ("mut_2d", "–ú—É—Ç –Ω–∞ 2 –¥–Ω—è"),
    ("mut_3d", "–ú—É—Ç –Ω–∞ 3 –¥–Ω—è"),
    ("mut_7d", "–ú—É—Ç –Ω–∞ 7 –¥–Ω–µ–π"),
    ("mut_30d", "–ú—É—Ç –Ω–∞ 30 –¥–Ω–µ–π"),
    ("mut_perm", "–ë–µ—Å—Å—Ä–æ—á–Ω—ã–π –º—É—Ç"),
    ("unmute", "–°–Ω—è—Ç—å –º—É—Ç")
]


block_commands = [
    ("block_media", "–ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Å—Ç–∏–∫–µ—Ä—ã –∏ –≥–∏—Ñ–∫–∏"),
    ("unblock_media", "–†–∞–∑—Ä–µ—à–∏—Ç—å —Å—Ç–∏–∫–µ—Ä—ã –∏ –≥–∏—Ñ–∫–∏")
]

ban_commands = [
    ("ban", "–ó–∞–±–∞–Ω–∏—Ç—å"),
    ("unban", "–†–∞–∑–±–∞–Ω–∏—Ç—å"),
    ("add_admin", "–í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∫—É"),
    ("remove_admin", "–°–Ω—è—Ç—å –∞–¥–º–∏–Ω–∫—É")
]

all_commands = mute_commands + block_commands + ban_commands
bot.set_my_commands([BotCommand(cmd, desc) for cmd, desc in all_commands])

# ========== –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ==========
def is_admin(chat_id, user_id):
    try:
        member = bot.get_chat_member(chat_id, user_id)
        return member.status in ['administrator', 'creator']
    except Exception:
        return False

def parse_duration(duration: str) -> int:
    match = re.match(r'(\d+)([smhd])', duration)
    if not match:
        return 0
    num, unit = match.groups()
    seconds = int(num)
    if unit == 'm':
        seconds *= 60
    elif unit == 'h':
        seconds *= 3600
    elif unit == 'd':
        seconds *= 86400
    return seconds

# ========== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ==========
@bot.message_handler(func=lambda m: m.from_user.id in blacklist)
def blocked_user(message: Message):
    bot.reply_to(message, "‚õî –í—ã –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞.")

@bot.message_handler(commands=['ban'])
def ban_user(message: Message):
    if not is_admin(message.chat.id, message.from_user.id):
        return
    if message.reply_to_message:
        bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        bot.reply_to(message, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")

@bot.message_handler(commands=['unban'])
def unban_user(message: Message):
    if not is_admin(message.chat.id, message.from_user.id):
        return
    if message.reply_to_message:
        bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        bot.reply_to(message, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")

@bot.message_handler(commands=['unmute'])
def unmute_user(message: Message):
    if not is_admin(message.chat.id, message.from_user.id):
        return
    if message.reply_to_message:
        perms = ChatPermissions(
            can_send_messages=True,
            can_send_media_messages=True,
            can_send_other_messages=True,
            can_add_web_page_previews=True,
            can_send_polls=True,
            can_change_info=False,
            can_invite_users=True,
            can_pin_messages=False
        )
        bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.from_user.id,
            permissions=perms,
            until_date=0
        )
        bot.reply_to(message, "‚úÖ –ú—É—Ç —Å–Ω—è—Ç.")

@bot.message_handler(commands=[cmd[0] for cmd in mute_commands if 'mut_' in cmd[0]])
def handle_mute(message: Message):
    if not is_admin(message.chat.id, message.from_user.id):
        bot.reply_to(message, "‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –º—É—Ç.")
        return
    if not message.reply_to_message:
        bot.reply_to(message, "üîÑ –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å –º—É—Ç.")
        return

    try:
        cmd = message.text.split()[0]
        duration_code = cmd.split('_')[1]

        if duration_code == "perm":
            until = datetime.now(UTC) + timedelta(days=365 * 100)
        else:
            seconds = parse_duration(duration_code)
            until = datetime.now(UTC) + timedelta(seconds=seconds)

        perms = ChatPermissions(
            can_send_messages=False,
            can_send_media_messages=False,
            can_send_other_messages=False,
            can_add_web_page_previews=False,
            can_send_polls=False
        )

        bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.from_user.id,
            permissions=perms,
            until_date=until
        )
        bot.reply_to(message, f"üîá –ú—É—Ç –Ω–∞ {duration_code}")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['block_media'])
def block_media(message: Message):
    if is_admin(message.chat.id, message.from_user.id) and message.reply_to_message:
        perms = ChatPermissions(
            can_send_messages=True,
            can_send_media_messages=False,
            can_send_other_messages=False,
            can_add_web_page_previews=False,
            can_send_polls=True
        )
        bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, permissions=perms)
        bot.reply_to(message, "üö´ –°—Ç–∏–∫–µ—Ä—ã –∏ –≥–∏—Ñ–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã.")

@bot.message_handler(commands=['unblock_media'])
def unblock_media(message: Message):
    if is_admin(message.chat.id, message.from_user.id) and message.reply_to_message:
        perms = ChatPermissions(
            can_send_messages=True,
            can_send_media_messages=True,
            can_send_other_messages=True,
            can_add_web_page_previews=True,
            can_send_polls=True
        )
        bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, permissions=perms)
        bot.reply_to(message, "‚úÖ –°—Ç–∏–∫–µ—Ä—ã –∏ –≥–∏—Ñ–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã.")

@bot.message_handler(commands=['add_admin'])
def add_admin(message: Message):
    if is_admin(message.chat.id, message.from_user.id) and message.reply_to_message:
        try:
            bot.promote_chat_member(
                chat_id=message.chat.id,
                user_id=message.reply_to_message.from_user.id,
                can_change_info=True,
                can_delete_messages=True,
                can_invite_users=True,
                can_restrict_members=True,
                can_pin_messages=True,
                can_promote_members=False,
                can_manage_chat=True
            )
            bot.reply_to(message, "üëë –ê–¥–º–∏–Ω–∫–∞ –≤—ã–¥–∞–Ω–∞.")
        except Exception as e:
            bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['remove_admin'])
def remove_admin(message: Message):
    if is_admin(message.chat.id, message.from_user.id) and message.reply_to_message:
        try:
            bot.promote_chat_member(
                chat_id=message.chat.id,
                user_id=message.reply_to_message.from_user.id,
                can_change_info=False,
                can_delete_messages=False,
                can_invite_users=False,
                can_restrict_members=False,
                can_pin_messages=False,
                can_promote_members=False,
                can_manage_chat=False
            )
            bot.reply_to(message, "üóë –ê–¥–º–∏–Ω–∫–∞ —Å–Ω—è—Ç–∞.")
        except Exception as e:
            bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

# ========== –ó–∞–ø—É—Å–∫ ==========
print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
